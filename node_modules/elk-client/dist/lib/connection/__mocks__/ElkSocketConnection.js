"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
var ElkConnectionState_1 = require("../ElkConnectionState");
exports.connect = jest.fn().mockResolvedValue({});
exports.disconnect = jest.fn().mockResolvedValue({});
exports.write = jest.fn().mockResolvedValue({});
var ElkSocketConnectionMock = /** @class */ (function (_super) {
    __extends(ElkSocketConnectionMock, _super);
    function ElkSocketConnectionMock(initialOptions) {
        if (initialOptions === void 0) { initialOptions = {}; }
        var _this = _super.call(this) || this;
        _this.initialOptions = initialOptions;
        _this.connect = exports.connect;
        _this.disconnect = exports.disconnect;
        _this.write = exports.write;
        _this.state = ElkConnectionState_1.default.Disconnected;
        ElkSocketConnectionMock.instances.push(_this);
        return _this;
    }
    ElkSocketConnectionMock.mockClear = function () {
        ElkSocketConnectionMock.instances = [];
        exports.connect.mockClear();
        exports.disconnect.mockClear();
    };
    ElkSocketConnectionMock.instances = [];
    return ElkSocketConnectionMock;
}(events_1.EventEmitter));
;
exports.default = ElkSocketConnectionMock;
//# sourceMappingURL=ElkSocketConnection.js.map