import ElkCommand from './ElkCommand';
import UserCode from '../../models/UserCode';
import UserCodeChangeType from '../../enums/UserCodeChangeType';
/**
 * Encodes selected area numbers.
 *
 * Two ASCII Hex characters, 0-9,A-F, using the Hex value of each
 * character as the mask for 4 areas. Right most character is
 * areas 1 to 4 with bit 0 equal to Area 1.
 *
 * @param areaNumbers An array of area numbers to encode
 * @return {string} The area numbers encoded as hex.
 */
export declare function encodeAreaNumbers(areaNumbers?: number[]): string;
/**
 * Request Change User Code
 *
 * This command allows automation equipment to change a user code. The
 * data packet must include a Master User Code or the current user code
 * of the user code to be changed. 4.3.9 and after.
 *
 * @see 4.11.1 Request Change User Code (cu)
 */
export default class UserCodeChangeRequest extends ElkCommand {
    readonly userNumber: number;
    readonly areaNumbers?: number[] | undefined;
    readonly changeType: UserCodeChangeType;
    readonly newUserCode: UserCode;
    readonly authorizationUserCode: UserCode;
    constructor(userNumber: number, masterOrCurrentUserCode: string | UserCode, newUserCode: string | UserCode, areaNumbers?: number[] | undefined, changeType?: UserCodeChangeType);
    get reserved(): string;
}
