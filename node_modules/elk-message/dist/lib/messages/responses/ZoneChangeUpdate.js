"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
var ZoneStatus_1 = require("../../models/ZoneStatus");
/**
 * Zone Change Update
 *
 * This transmission update option transmits the updated status
 * whenever it changes and is enabled by setting the location
 * TRUE in the M1 Control Global Programming Location 36.
 * Example: “Xmit Zone Chgs–ASCII” (Yes or No)
 *
 * @see 4.39 Zone Change Update (ZC)
 */
var ZoneChangeUpdate = /** @class */ (function (_super) {
    __extends(ZoneChangeUpdate, _super);
    function ZoneChangeUpdate(raw) {
        var _this = _super.call(this, raw) || this;
        _this.zoneNumber = parseInt(_this.data.substr(0, 3), 10);
        _this.zoneStatus = ZoneStatus_1.default.parse(_this.data[3]);
        return _this;
    }
    ZoneChangeUpdate.COMMAND = 'ZC';
    return ZoneChangeUpdate;
}(ElkResponse_1.default));
exports.default = ZoneChangeUpdate;
//# sourceMappingURL=ZoneChangeUpdate.js.map