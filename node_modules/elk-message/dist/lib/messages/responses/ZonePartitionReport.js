"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Zone Partition Report
 *
 * The control panel sends this message in response to a
 * Zone Partition Request. The data portion, D, of this
 * message is 208 characters long, one character for each
 * zone in order. The value will be from 1-8.
 *
 * @see 4.40.4 Zone Partition Report (ZP)
 */
var ZonePartitionReport = /** @class */ (function (_super) {
    __extends(ZonePartitionReport, _super);
    function ZonePartitionReport(raw) {
        var _this = _super.call(this, raw) || this;
        _this.zonePartitions = Array.from(_this.data).map(function (char) { return parseInt(char, 10); });
        return _this;
    }
    ZonePartitionReport.prototype.getZoneArea = function (zoneNumber) {
        return this.zonePartitions[zoneNumber - 1];
    };
    ZonePartitionReport.COMMAND = 'ZP';
    return ZonePartitionReport;
}(ElkResponse_1.default));
exports.default = ZonePartitionReport;
//# sourceMappingURL=ZonePartitionReport.js.map