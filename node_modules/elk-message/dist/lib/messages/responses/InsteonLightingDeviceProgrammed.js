"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reply Programming Of Insteon Lighting Device Data
 *
 * Note: Insteon Lighting Device 193 to 256 corresponds to
 * Insteon Groups 1 â€“ 64.
 *
 * @see 4.44 Reply Programming Of Insteon Lighting Device Data (IP)
 */
var InsteonLightingDeviceProgrammed = /** @class */ (function (_super) {
    __extends(InsteonLightingDeviceProgrammed, _super);
    function InsteonLightingDeviceProgrammed(raw) {
        var _this = _super.call(this, raw) || this;
        _this.startingDeviceNumber = parseInt(_this.data.substr(0, 3), 10);
        _this.deviceCount = parseInt(_this.data.substr(3, 1), 10);
        return _this;
    }
    Object.defineProperty(InsteonLightingDeviceProgrammed.prototype, "endingDeviceNumber", {
        get: function () {
            return this.startingDeviceNumber + this.deviceCount - 1;
        },
        enumerable: true,
        configurable: true
    });
    InsteonLightingDeviceProgrammed.COMMAND = 'IP';
    return InsteonLightingDeviceProgrammed;
}(ElkResponse_1.default));
exports.default = InsteonLightingDeviceProgrammed;
//# sourceMappingURL=InsteonLightingDeviceProgrammed.js.map