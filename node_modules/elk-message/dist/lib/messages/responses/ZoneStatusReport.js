"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
var ZoneStatus_1 = require("../../models/ZoneStatus");
/**
 * Zone Status Report
 *
 * The control panel sends this message in response
 * to a Zone Status Request. The data portion of this
 * message is 208 characters long, one character for
 * each zone in order. Each character is the sum of
 * all applicable status values, expressed in hexadecimal,
 * using ASCII characters 0-9 and A-F.
 * @see 4.40.6 Zone Status Report (ZS)
 */
var ZoneStatusReport = /** @class */ (function (_super) {
    __extends(ZoneStatusReport, _super);
    function ZoneStatusReport(raw) {
        var _this = _super.call(this, raw) || this;
        _this.zoneStatuses = Array.from(_this.data).map(function (char) { return ZoneStatus_1.default.parse(char); });
        return _this;
    }
    ZoneStatusReport.prototype.getZoneStatus = function (zoneNumber) {
        return this.zoneStatuses[zoneNumber - 1];
    };
    ZoneStatusReport.COMMAND = 'ZS';
    return ZoneStatusReport;
}(ElkResponse_1.default));
exports.default = ZoneStatusReport;
//# sourceMappingURL=ZoneStatusReport.js.map