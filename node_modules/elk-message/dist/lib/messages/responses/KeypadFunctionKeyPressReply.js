"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reply Keypad Function Key Press
 *
 * @see 4.22.2 Reply Keypad Function Key Press (KF)
 */
var KeypadFunctionKeyPressReply = /** @class */ (function (_super) {
    __extends(KeypadFunctionKeyPressReply, _super);
    function KeypadFunctionKeyPressReply(raw) {
        var _this = _super.call(this, raw) || this;
        _this.keypadNumber = parseInt(_this.data.substr(0, 2), 10);
        _this.functionKey = _this.data.substr(2, 1).charCodeAt(0);
        _this.chimeModes = Array.from(_this.data.substr(3, 8)).map(function (char) { return char.charCodeAt(0); });
        return _this;
    }
    KeypadFunctionKeyPressReply.prototype.getChimeMode = function (areaNumber) {
        return this.chimeModes[areaNumber - 1];
    };
    KeypadFunctionKeyPressReply.COMMAND = 'KF';
    return KeypadFunctionKeyPressReply;
}(ElkResponse_1.default));
exports.default = KeypadFunctionKeyPressReply;
//# sourceMappingURL=KeypadFunctionKeyPressReply.js.map