"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reset Ethernet Module
 *
 * This command is originated from the M1 and causes the M1XEP
 * Ethernet Module to reset its processor and/or its IP address
 * to: 192.168.0.251. This can be used when the IP address of the
 * M1XEP is set to an unknown value. This is accessed through the
 * M1â€™s Keypad Global Installer Programming, Option 45, then enter
 * 96. M1 Version 4.3.7 and after.
 *
 * @see 4.26 Reset Ethernet Module (RE)
 */
var EthernetModuleReset = /** @class */ (function (_super) {
    __extends(EthernetModuleReset, _super);
    function EthernetModuleReset(raw) {
        var _this = _super.call(this, raw) || this;
        _this.isIpAddressReset = _this.data[0] === '1';
        return _this;
    }
    EthernetModuleReset.COMMAND = 'RE';
    return EthernetModuleReset;
}(ElkResponse_1.default));
exports.default = EthernetModuleReset;
//# sourceMappingURL=EthernetModuleReset.js.map