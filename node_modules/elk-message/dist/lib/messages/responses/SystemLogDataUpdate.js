"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * System Log Data Update
 *
 * As the control log is written, the same information is
 *  sent out the RS-232 port. The log information will have
 * the ddd index value set to “000” to indicate a logging
 * entry.
 *
 * The log data may also be requested with the “ld”
 * (lower case “LD”) command below. Modified in M1 version 4.3.2
 *
 * The “System Log Data Update” transmission option, transmits the
 * updated status whenever it changes and is enabled by setting the
 * location TRUE in the M1 Control Global Programming Locations 35.
 * Example: “Xmit Event Log–ASCII” (Yes or No). The request for log
 * data “ld” is not controlled by this option.
 *
 * @see 4.23 System Log Data Update (LD)
 */
var SystemLogDataUpdate = /** @class */ (function (_super) {
    __extends(SystemLogDataUpdate, _super);
    function SystemLogDataUpdate(raw) {
        var _this = _super.call(this, raw) || this;
        _this.event = parseInt(_this.data.substr(0, 4), 10);
        _this.eventNumberData = parseInt(_this.data.substr(4, 3), 10);
        _this.areaNumber = parseInt(_this.data.substr(7, 1), 10);
        _this.hour = parseInt(_this.data.substr(8, 2), 10);
        _this.minutes = parseInt(_this.data.substr(10, 2), 10);
        _this.month = parseInt(_this.data.substr(12, 2), 10);
        _this.day = parseInt(_this.data.substr(14, 2), 10);
        _this.logIndex = parseInt(_this.data.substr(16, 3), 10);
        _this.dayOfWeek = parseInt(_this.data.substr(19, 1), 10);
        _this.year = 2000 + parseInt(_this.data.substr(20, 2), 10);
        return _this;
    }
    SystemLogDataUpdate.COMMAND = 'LD';
    return SystemLogDataUpdate;
}(ElkResponse_1.default));
exports.default = SystemLogDataUpdate;
//# sourceMappingURL=SystemLogDataUpdate.js.map