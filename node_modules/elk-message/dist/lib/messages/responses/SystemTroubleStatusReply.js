"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
var SystemTroubleType_1 = require("../../enums/SystemTroubleType");
/**
 * Reply System Trouble Status
 *
 * This command allows automation equipment to poll
 * for system trouble status. Firmware revision 4.5.4,
 * 5.1.4 and after. This message will automatically
 * be sent upon a trouble status change.
 *
 * @see 4.30.2 Reply System Trouble Status (SS)
 */
var SystemTroubleStatusReply = /** @class */ (function (_super) {
    __extends(SystemTroubleStatusReply, _super);
    function SystemTroubleStatusReply(raw) {
        var _this = _super.call(this, raw) || this;
        _this.troubles = SystemTroubleType_1.default.None;
        if (_this.data[0] === '1') {
            _this.troubles |= SystemTroubleType_1.default.ACFail;
        }
        if (_this.data[1] !== '0') {
            _this.troubles |= SystemTroubleType_1.default.BoxTamper;
            _this.boxTamperTroubleZone = _this.data.charCodeAt(1) - 48;
        }
        if (_this.data[2] === '1') {
            _this.troubles |= SystemTroubleType_1.default.FailToCommunicate;
        }
        if (_this.data[3] === '1') {
            _this.troubles |= SystemTroubleType_1.default.EEPromMemoryError;
        }
        if (_this.data[4] === '1') {
            _this.troubles |= SystemTroubleType_1.default.LowBatteryControl;
        }
        if (_this.data[5] !== '0') {
            _this.troubles |= SystemTroubleType_1.default.TransmitterLowBattery;
            _this.transmitterLowBatteryTroubleZone = _this.data.charCodeAt(5) - 48;
        }
        if (_this.data[6] === '1') {
            _this.troubles |= SystemTroubleType_1.default.OverCurrent;
        }
        if (_this.data[7] === '1') {
            _this.troubles |= SystemTroubleType_1.default.TelephoneFault;
        }
        if (_this.data[9] === '1') {
            _this.troubles |= SystemTroubleType_1.default.Output2;
        }
        if (_this.data[10] === '1') {
            _this.troubles |= SystemTroubleType_1.default.MissingKeypad;
        }
        if (_this.data[11] === '1') {
            _this.troubles |= SystemTroubleType_1.default.ZoneExpander;
        }
        if (_this.data[12] === '1') {
            _this.troubles |= SystemTroubleType_1.default.OutputExpander;
        }
        if (_this.data[14] === '1') {
            _this.troubles |= SystemTroubleType_1.default.ELKRPRemoteAccess;
        }
        if (_this.data[16] === '1') {
            _this.troubles |= SystemTroubleType_1.default.CommonAreaNotArmed;
        }
        if (_this.data[17] === '1') {
            _this.troubles |= SystemTroubleType_1.default.FlashMemoryError;
        }
        if (_this.data[18] !== '0') {
            _this.troubles |= SystemTroubleType_1.default.SecurityAlert;
            _this.securityAlertTroubleZone = _this.data.charCodeAt(18) - 48;
        }
        if (_this.data[19] === '1') {
            _this.troubles |= SystemTroubleType_1.default.SerialPortExpander;
        }
        if (_this.data[20] !== '0') {
            _this.troubles |= SystemTroubleType_1.default.LostTransmitter;
            _this.lostTransmitterTroubleZone = _this.data.charCodeAt(20) - 48;
        }
        if (_this.data[21] === '1') {
            _this.troubles |= SystemTroubleType_1.default.GESmokeCleanMe;
        }
        if (_this.data[22] === '1') {
            _this.troubles |= SystemTroubleType_1.default.EthernetTrouble;
        }
        if (_this.data[31] === '1') {
            _this.troubles |= SystemTroubleType_1.default.DisplayMessageInKeypadLine1;
        }
        if (_this.data[32] === '1') {
            _this.troubles |= SystemTroubleType_1.default.DisplayMessageInKeypadLine2;
        }
        if (_this.data[33] !== '0') {
            _this.troubles |= SystemTroubleType_1.default.FireTrouble;
            _this.fireTroubleZone = _this.data.charCodeAt(33) - 48;
        }
        return _this;
    }
    SystemTroubleStatusReply.COMMAND = 'SS';
    return SystemTroubleStatusReply;
}(ElkResponse_1.default));
exports.default = SystemTroubleStatusReply;
//# sourceMappingURL=SystemTroubleStatusReply.js.map