"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Installer Mode Exited
 *
 * This command is automatically sent through serial port 0 only
 * when the installer mode is terminated. This is done by pressing
 * the “*” key three times or the installer timer runs out. This
 * command is used by the M1XEP Ethernet Interface to know when to
 * reload M1 program data after an installer has done any keypad
 * programming. M1 Version 4.2.8 and after.
 *
 * @see 4.18.1 Send Installer Mode Exited (IE)
 */
var InstallerModeExited = /** @class */ (function (_super) {
    __extends(InstallerModeExited, _super);
    function InstallerModeExited() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InstallerModeExited.COMMAND = 'IE';
    return InstallerModeExited;
}(ElkResponse_1.default));
exports.default = InstallerModeExited;
//# sourceMappingURL=InstallerModeExited.js.map