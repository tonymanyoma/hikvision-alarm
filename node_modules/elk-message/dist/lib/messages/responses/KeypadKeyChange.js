"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Keypad KeyChange Update
 *
 * @see 4.21 Keypad KeyChange Update (KC)
 */
var KeypadKeyChange = /** @class */ (function (_super) {
    __extends(KeypadKeyChange, _super);
    function KeypadKeyChange(raw) {
        var _this = _super.call(this, raw) || this;
        _this.keypadNumber = parseInt(_this.data.substr(0, 2), 10);
        _this.keyPressed = parseInt(_this.data.substr(2, 2), 10);
        _this.functionKeyIlluminations = Array.from(_this.data.substr(4, 6)).map(function (illumination) {
            return illumination.charCodeAt(0);
        });
        _this.isCodeRequiredToBypass = _this.data.substr(10, 1) === '1';
        _this.areaBeepAndChimeModes = Array.from(_this.data.substr(11, 8)).map(function (mode) {
            return mode.charCodeAt(0);
        });
        return _this;
    }
    KeypadKeyChange.prototype.getBeepAndChimeMode = function (areaNumber) {
        return this.areaBeepAndChimeModes[areaNumber - 1];
    };
    KeypadKeyChange.prototype.getFunctionKeyIllumination = function (keyNumber) {
        return this.functionKeyIlluminations[keyNumber - 1];
    };
    KeypadKeyChange.COMMAND = 'KC';
    return KeypadKeyChange;
}(ElkResponse_1.default));
exports.default = KeypadKeyChange;
//# sourceMappingURL=KeypadKeyChange.js.map