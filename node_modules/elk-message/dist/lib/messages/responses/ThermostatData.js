"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reply Thermostat Data
 *
 * @see 4.35.2 Reply Thermostat Data (TR)
 */
var ThermostatData = /** @class */ (function (_super) {
    __extends(ThermostatData, _super);
    function ThermostatData(raw) {
        var _this = _super.call(this, raw) || this;
        _this.thermostatNumber = parseInt(_this.data.substr(0, 2), 10);
        _this.thermostatMode = _this.data.charCodeAt(2);
        _this.thermostatHold = _this.data[3] === '1';
        _this.thermostatFanOn = _this.data[4] === '1';
        _this.temperature = parseInt(_this.data.substr(5, 2), 10) || undefined;
        _this.heatSetPoint = parseInt(_this.data.substr(7, 2), 10) || undefined;
        _this.coolSetPoint = parseInt(_this.data.substr(9, 2), 10) || undefined;
        _this.humidity = parseInt(_this.data.substr(11, 2), 10) || undefined;
        return _this;
    }
    ThermostatData.COMMAND = 'TR';
    return ThermostatData;
}(ElkResponse_1.default));
exports.default = ThermostatData;
//# sourceMappingURL=ThermostatData.js.map