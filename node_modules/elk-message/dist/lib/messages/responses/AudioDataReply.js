"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reply With Audio Data
 *
 * Sent as a response to {@link AudioDataRequest}
 *
 * @see 4.6.2 Reply With Audio Data (CA)
 */
var AudioDataReply = /** @class */ (function (_super) {
    __extends(AudioDataReply, _super);
    function AudioDataReply(raw) {
        var _this = _super.call(this, raw) || this;
        _this.zone = parseInt(_this.data.substr(0, 2), 10);
        _this.isPowered = _this.data.substr(2, 1) === '1';
        _this.source = parseInt(_this.data.substr(3, 2), 10);
        _this.volume = parseInt(_this.data.substr(5, 3), 10);
        _this.bass = parseInt(_this.data.substr(8, 3), 10);
        _this.treble = parseInt(_this.data.substr(11, 3), 10);
        _this.isLoudness = _this.data.substr(14, 1) === '1';
        _this.balance = parseInt(_this.data.substr(15, 3), 10);
        _this.partyMode = parseInt(_this.data.substr(18, 1), 10);
        _this.isDoNotDisturb = _this.data.substr(19, 1) === '1';
        return _this;
    }
    AudioDataReply.COMMAND = 'CA';
    return AudioDataReply;
}(ElkResponse_1.default));
exports.default = AudioDataReply;
//# sourceMappingURL=AudioDataReply.js.map