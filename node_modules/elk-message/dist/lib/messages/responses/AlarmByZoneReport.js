"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
var ZoneDefinition_1 = require("../../enums/ZoneDefinition");
/**
 * Reply Alarm By Zone Report Data
 *
 * May be requested by sending a {@link AlarmByZoneRequest}
 *
 * @see 4.5.1 Reply Alarm By Zone Report Data (AZ)
 */
var AlarmByZoneReport = /** @class */ (function (_super) {
    __extends(AlarmByZoneReport, _super);
    function AlarmByZoneReport(raw) {
        var _this = _super.call(this, raw) || this;
        _this.zones = Array.from(_this.data).map(function (char) { return char.charCodeAt(0); });
        _this.zonesInAlarm = _this.zones.reduce(function (alarmedZones, current, index) {
            if (current !== ZoneDefinition_1.default.Disabled) {
                return __spreadArrays(alarmedZones, [index + 1]);
            }
            return alarmedZones;
        }, []);
        return _this;
    }
    AlarmByZoneReport.prototype.getZoneAlarm = function (zoneNumber) {
        return this.zones[zoneNumber - 1];
    };
    Object.defineProperty(AlarmByZoneReport.prototype, "hasAlarms", {
        get: function () {
            return this.zonesInAlarm.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    AlarmByZoneReport.COMMAND = 'AZ';
    return AlarmByZoneReport;
}(ElkResponse_1.default));
exports.default = AlarmByZoneReport;
//# sourceMappingURL=AlarmByZoneReport.js.map