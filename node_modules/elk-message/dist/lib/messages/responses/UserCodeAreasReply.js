"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkResponse_1 = require("./ElkResponse");
/**
 * Reply With Valid User Code Areas
 *
 * @see 4.37.2 Reply With Valid User Code Areas (UA)
 */
var UserCodeAreasReply = /** @class */ (function (_super) {
    __extends(UserCodeAreasReply, _super);
    function UserCodeAreasReply(raw) {
        var _this = _super.call(this, raw) || this;
        _this.userCode = _this.data.substr(0, 6);
        var areaBits = parseInt(_this.data.substr(6, 2), 16).toString(2);
        _this.areas = Array.from(areaBits).map(function (bit) { return bit === '1'; });
        _this.diagnosticData = _this.data.substr(8, 8);
        _this.userCodeLength = parseInt(_this.data.substr(16, 1), 10);
        _this.userCodeType = _this.data.charCodeAt(17);
        _this.temperatureMode = _this.data[18];
        return _this;
    }
    UserCodeAreasReply.prototype.isValidForArea = function (areaNumber) {
        return this.areas[areaNumber - 1];
    };
    UserCodeAreasReply.COMMAND = 'UA';
    return UserCodeAreasReply;
}(ElkResponse_1.default));
exports.default = UserCodeAreasReply;
//# sourceMappingURL=UserCodeAreasReply.js.map