"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkCommand_1 = require("./ElkCommand");
/**
 * Write Real Time Clock Data
 *
 * @see 4.28.3 Write Real Time Clock Data (rw)
 */
var RealTimeClockDataWrite = /** @class */ (function (_super) {
    __extends(RealTimeClockDataWrite, _super);
    function RealTimeClockDataWrite(year, month, day, dayOfWeek, hour, minutes, seconds) {
        var _this = _super.call(this, 'r', 'w', seconds.toString().padStart(2, '0') +
            minutes.toString().padStart(2, '0') +
            hour.toString().padStart(2, '0') +
            dayOfWeek.toString() +
            day.toString().padStart(2, '0') +
            month.toString().padStart(2, '0') +
            year
                .toString()
                .padStart(2, '0')
                .substr(-2)) || this;
        _this.year = year;
        _this.month = month;
        _this.day = day;
        _this.dayOfWeek = dayOfWeek;
        _this.hour = hour;
        _this.minutes = minutes;
        _this.seconds = seconds;
        return _this;
    }
    return RealTimeClockDataWrite;
}(ElkCommand_1.default));
exports.default = RealTimeClockDataWrite;
//# sourceMappingURL=RealTimeClockDataWrite.js.map