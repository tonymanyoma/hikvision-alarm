"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ElkCommand_1 = require("./ElkCommand");
/**
 * Request - Omnistat 2 From PC to M1 ASCII Protocol
 *
 * This request command allows for requesting data from the M1XSP that
 * is connected to the HAI Omnistate 2 HVAC Thermostat. The Omnistat 2
 * protocol is required to build the ASCII command strings. M1 version
 * 5.1.9 or later is required for this command.
 *
 * @see 4.35.4 Request - Omnistat 2 From PC to M1 ASCII Protocol (t2)
 */
var Omnistat2Request = /** @class */ (function (_super) {
    __extends(Omnistat2Request, _super);
    function Omnistat2Request(omnistatData) {
        var _this = _super.call(this, 't', '2', omnistatData.padEnd(36, '0')) || this;
        _this.omnistatData = omnistatData;
        return _this;
    }
    return Omnistat2Request;
}(ElkCommand_1.default));
exports.default = Omnistat2Request;
//# sourceMappingURL=Omnistat2Request.js.map